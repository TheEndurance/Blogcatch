@model Blogcatch.ViewModel.PostViewModel

@{
    ViewBag.Title = Model.Heading;
}
@section Styles {
    <link rel="stylesheet" href="~/Content/styles/tagify.css" />
}
<div class="container">

    <h2>Add Post</h2>
    @if (TempData["SM"] != null)
    {
        <div class="alert alert-success">@TempData["SM"]</div>
    }

    @using (Html.BeginForm(Model.Action, "Posts", FormMethod.Post, new { enctype = "multipart/form-data", id = "PostForm" }))
    {
        <div class="row">

            <!-- MAIN FORM-->
            <div class="col-sm-7 col-md-7">
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Title, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.Slug, null, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label class="control-label col-md-2" for="Image">Blog Post Display Picture</label>
                        <div class="col-md-10">
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <span class="btn btn-default btn-file">
                                        Browse… <input type="file" id="Image" name="Image">
                                    </span>
                                </span>
                                <input type="text" class="form-control" value="@Model.DisplayPicture" readonly>
                            </div>
                            <img style="max-width: 400px" id='img-upload' src="@Model.DisplayPicture" />
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.Content, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.AllowComments, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.CheckBoxFor(model => model.AllowComments)
                                @Html.ValidationMessageFor(model => model.AllowComments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>

            <!-- SIDE AREA OF FORM -->
            <div class="col-sm-5 col-md-5">
                <div class="form-horizontal">
                <div class="form-group">
                    <input type="hidden" id="Tags" name="Tags" value="@Model.Tags"/>

                    <label class="control-label col-md-2">Tags</label>

                    <div class="col-md-10" id="tagify">
                        <!---Tagify will initialize here-->
                    </div>
                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, htmlAttributes: new {@class = "control-label  col-md-2"})
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "Select a blog category", new {@class = "form-control"})
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        @Html.ActionLink("Back to Posts", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tagify.js"></script>
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        /*
        * CK Editor
        */
        CKEDITOR.replace("Content");
        ////////////////////////////////////////////////////////////////
        $(document).ready(function () {

            /*
            * Display Picture
            */
            $(document).on('change', '.btn-file :file', function () {
                var input = $(this);
                var label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });

            //Finds the text input which is disabled on the custom event 'fileselect' and sets it text
            //to the image name
            $('.btn-file :file').on('fileselect', function (event, label) {
                var input = $(this).parents('.input-group').find(':text');
                if (input.length) {
                    input.val(label);
                }
            });

            //When the Image input is changed, trigger readURL
            $("#Image").change(function () {
                readURL(this);
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                    }

                    //reads the URL of the File or blob, and triggers the 'load' event of reader
                    //which has an event handler above
                    reader.readAsDataURL(input.files[0]);
                }
            }

            //////////////////////////////////////////////////////////////

            /*
            * Tagify
            */
            $("#tagify").tagify();
            $("#tagify").tagify('InsertJsonArrayToForm', 'PostForm');

        });
    </script>
}
