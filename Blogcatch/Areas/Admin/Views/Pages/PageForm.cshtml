@model Blogcatch.ViewModel.Admin.PageViewModel

@{
    ViewBag.Title = Model.Heading;
}

<h2>@Model.Heading</h2>


@using (Html.BeginForm(Model.Action,"Pages")) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @if (TempData["SM"] != null)
        {
            <div class="alert alert-success">@TempData["SM"]</div>
        }
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title,null , new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Slug,null, new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <label class="control-label col-md-2" for="Image">Blog Post Display Picture</label>
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-btn">
                        <span class="btn btn-default btn-file">
                            Browse… <input type="file" id="Image" name="Image">
                        </span>
                    </span>
                    <input type="text" class="form-control" value="@Model.HeaderPicture" readonly>
                </div>
                <img style="max-width: 400px" id='img-upload' src="@Model.HeaderPicture" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Body, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HasSidebar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.HasSidebar)
                    @Html.ValidationMessageFor(model => model.HasSidebar, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Model.Heading" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js"></script>
    <script>
        CKEDITOR.replace("Body");
        $(document).ready(function() {
            /*
            * Display Picture
            */
            $(document).on('change', '.btn-file :file', function () {
                var input = $(this);
                var label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
                input.trigger('fileselect', [label]);
            });

            //Finds the text input which is disabled on the custom event 'fileselect' and sets it text
            //to the image name
            $('.btn-file :file').on('fileselect', function (event, label) {
                var input = $(this).parents('.input-group').find(':text');
                if (input.length) {
                    input.val(label);
                }
            });

            //When the Image input is changed, trigger readURL
            $("#Image").change(function () {
                readURL(this);
            });

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('#img-upload').attr('src', e.target.result);
                    }

                    //reads the URL of the File or blob, and triggers the 'load' event of reader
                    //which has an event handler above
                    reader.readAsDataURL(input.files[0]);
                }
            }

            //////////////////////////////////////////////////////////////
        });
    </script>
}
