@model Blogcatch.ViewModel.Front.BlogViewModel

@{
    ViewBag.Title = "Home";
}

<!-- Page Header -->
<!-- Set your background image for this header on the line below. -->
<header class="intro-header">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1">
                <div class="site-heading">
                    <h1>Blogcatch</h1>
                    <hr class="small">
                    <span class="subheading">An ASP.NET MVC 5 blogging CMS built by Rawa Jalal</span>
                </div>
            </div>
        </div>
    </div>
</header>
<div class="container">
    <div class="row">
        <div class="col-md-8 post-area">
            <!-- Main page heading -->
            <h1 class="page-header">
                Blogcatch
                <small>Blogging CMS</small>
            </h1>
            @foreach (var post in Model.BlogPostViewModels)
            {
                <!-- Blog post -->
                <h2>
                    @Html.ActionLink(post.Title.ToString(),"Post","Blog",new {title=post.Slug},null)
                </h2>
                <p class="lead">@post.Author.UserName</p>
                <p><i class="fa fa-clock-o fa-1" aria-hidden="true"></i> Posted on @post.PostDate</p>
                <hr>
                if (post.DisplayPicture != null)
                {
                    <img class="img-responsive" src="@post.DisplayPicture" alt="">
                }
                else
                {
                    <img class="img-responsive" src="http://placehold.it/900x300" alt="">
                }
                <hr>
                <p>@Html.Raw(post.Excerpt)</p>
                <a class="btn btn-primary" href="/Post?title=@post.Slug">Read More <i class="fa fa-chevron-right fa-1" aria-hidden="true"></i></a><br/><br/>

                <span>Category: @post.Category.Name</span><br/>
                <span>Tags: </span>
                foreach (var tag in post.PostTags.Select(x => x.Tag.Name))
                {
                    <span class="label label-primary">@tag</span>
                }

                <hr>
            }

            <!-- pager -->
            @if (Model.Pager.EndPage > 1)
            {
                <ul class="pagination pagination-lg">
                    @if (Model.Pager.CurrentPage > 1)
                    {
                        <li>
                            @Html.ActionLink("First","Index","Blog",new {page = 1,search = Model.Search, category = Model.Category},null)
                        </li>
                        <li>
                            @Html.ActionLink("Previous","Index","Blog",new { page = Model.Pager.CurrentPage - 1, search=Model.Search, category = Model.Category},null)
                        </li>
                    }

                    @for (var page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
                    {
                        <li class="@(page == Model.Pager.CurrentPage ? "active" : "")">
                            @Html.ActionLink(page.ToString(), "Index", "Blog", new { page = page, search = Model.Search, category = Model.Category },null)
                        </li>
                    }

                    @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                    {
                        <li>
                            @Html.ActionLink("Next", "Index", "Blog",new {page = Model.Pager.CurrentPage+1, search = Model.Search },null)
                        </li>
                        <li>
                            @Html.ActionLink("Last", "Index", "Blog", new {page = Model.Pager.EndPage, search = Model.Search , category = Model.Category },null)
                            
                        </li>
                    }
                </ul>
            }

        </div>
        <div class="col-md-4 widget-area">
            @foreach (var widget in Model.ActiveWidgets)
            {
                <div class="well">
                    @{
                        Html.RenderAction(widget, "Widgets", new { area = "" });
                    }
                </div>
                        }
        </div>
    </div>
</div>